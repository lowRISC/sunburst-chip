diff --git a/data/spi_host.hjson b/data/spi_host.hjson
index 56c4002..1d5b5de 100644
--- a/data/spi_host.hjson
+++ b/data/spi_host.hjson
@@ -31,7 +31,7 @@
     {clock: "clk_i", reset: "rst_ni", primary: true},
   ]
   bus_interfaces: [
-    { protocol: "tlul", direction: "device", racl_support: true }
+    { protocol: "tlul", direction: "device" }
   ],
   inter_signal_list: [
     { struct: "logic",
@@ -50,26 +50,6 @@
             '''
       act:    "req",
     }
-    { struct:  "racl_policy_vec",
-      type:    "uni",
-      name:    "racl_policies",
-      act:     "rcv",
-      package: "top_racl_pkg",
-      desc:    '''
-        Incoming RACL policy vector from a racl_ctrl instance.
-        The policy selection vector (parameter) selects the policy for each register.
-      '''
-    }
-    { struct:  "racl_error_log",
-      type:    "uni",
-      name:    "racl_error",
-      act:     "req",
-      width:   "1"
-      package: "top_racl_pkg",
-      desc:    '''
-        RACL error log information of this module.
-      '''
-    }
   ]
   regwidth: "32",
   param_list: [
diff --git a/rtl/spi_host.sv b/rtl/spi_host.sv
index d6a0401..d96c752 100644
--- a/rtl/spi_host.sv
+++ b/rtl/spi_host.sv
@@ -11,12 +11,7 @@
 module spi_host
   import spi_host_reg_pkg::*;
 #(
-  parameter int unsigned                    NumCS                     = 1,
-  parameter bit                             EnableRacl                = 1'b0,
-  parameter bit                             RaclErrorRsp              = EnableRacl,
-  parameter top_racl_pkg::racl_policy_sel_t RaclPolicySelVec[NumRegs] = '{NumRegs{0}},
-  parameter top_racl_pkg::racl_policy_sel_t RaclPolicySelWinRXDATA    = 0,
-  parameter top_racl_pkg::racl_policy_sel_t RaclPolicySelWinTXDATA    = 0
+  parameter int unsigned                    NumCS                     = 1
 ) (
   input              clk_i,
   input              rst_ni,
@@ -25,10 +20,6 @@ module spi_host
   input              tlul_pkg::tl_h2d_t tl_i,
   output             tlul_pkg::tl_d2h_t tl_o,

-  // RACL interface
-  input  top_racl_pkg::racl_policy_vec_t racl_policies_i,
-  output top_racl_pkg::racl_error_log_t  racl_error_o,
-
   // SPI Interface
   output logic             cio_sck_o,
   output logic             cio_sck_en_o,
@@ -51,34 +42,11 @@ module spi_host
   spi_host_reg2hw_t reg2hw;
   spi_host_hw2reg_t hw2reg;

-  top_racl_pkg::racl_error_log_t racl_error[3];
-  if (EnableRacl) begin : gen_racl_error_arb
-    // Arbitrate between all simultaneously valid error log requests.
-    prim_racl_error_arb #(
-      .N ( 3 )
-    ) u_prim_err_arb (
-      .clk_i,
-      .rst_ni,
-      .error_log_i ( racl_error   ),
-      .error_log_o ( racl_error_o )
-    );
-  end else begin : gen_no_racl_error_arb
-    logic unused_signals;
-    always_comb begin
-      unused_signals = ^{racl_error[0] ^ racl_error[1] ^ racl_error[2]};
-      racl_error_o   = '0;
-    end
-  end
-
   tlul_pkg::tl_h2d_t fifo_win_h2d [2];
   tlul_pkg::tl_d2h_t fifo_win_d2h [2];

   // Register module
-  spi_host_reg_top #(
-    .EnableRacl       ( EnableRacl       ),
-    .RaclErrorRsp     ( RaclErrorRsp     ),
-    .RaclPolicySelVec ( RaclPolicySelVec )
-  ) u_reg (
+  spi_host_reg_top u_reg (
     .clk_i,
     .rst_ni,
     .tl_i             ( tl_i                   ),
@@ -86,9 +54,7 @@ module spi_host
     .tl_win_o         ( fifo_win_h2d           ),
     .tl_win_i         ( fifo_win_d2h           ),
     .reg2hw,
-    .hw2reg,
-    .racl_policies_i  ( racl_policies_i        ),
-    .racl_error_o     ( racl_error[0]          )
+    .hw2reg
   );

   logic             sck;
@@ -244,12 +210,7 @@ module spi_host
   logic        rx_valid;
   logic        rx_ready;

-  spi_host_window #(
-    .EnableRacl             ( EnableRacl             ),
-    .RaclErrorRsp           ( RaclErrorRsp           ),
-    .RaclPolicySelWinRXDATA ( RaclPolicySelWinRXDATA ),
-    .RaclPolicySelWinTXDATA ( RaclPolicySelWinTXDATA )
-  ) u_window (
+  spi_host_window u_window (
     .clk_i,
     .rst_ni,
     .rx_win_i         ( fifo_win_h2d[0]             ),
@@ -260,10 +221,7 @@ module spi_host
     .tx_be_o          ( tx_be                       ),
     .tx_valid_o       ( tx_valid                    ),
     .rx_data_i        ( rx_data                     ),
-    .rx_ready_o       ( rx_ready                    ),
-    .racl_policies_i  ( racl_policies_i             ),
-    .racl_error_tx_o  ( racl_error[1]               ),
-    .racl_error_rx_o  ( racl_error[2]               )
+    .rx_ready_o       ( rx_ready                    )
   );

   logic [31:0] core_tx_data;
@@ -559,5 +517,4 @@ module spi_host
   `ASSERT_KNOWN(IntrSpiEventKnownO_A, intr_spi_event_o)
   `ASSERT_KNOWN(IntrErrorKnownO_A, intr_error_o)
   `ASSERT_KNOWN(LsioTriggerKnown_A, lsio_trigger_o)
-  `ASSERT_KNOWN(RaclErrorValidKnown_A, racl_error_o.valid)
 endmodule : spi_host
diff --git a/rtl/spi_host_reg_top.sv b/rtl/spi_host_reg_top.sv
index dbaba05..c3be97b 100644
--- a/rtl/spi_host_reg_top.sv
+++ b/rtl/spi_host_reg_top.sv
@@ -6,13 +6,7 @@

 `include "prim_assert.sv"

-module spi_host_reg_top
-  # (
-    parameter bit          EnableRacl           = 1'b0,
-    parameter bit          RaclErrorRsp         = 1'b1,
-    parameter top_racl_pkg::racl_policy_sel_t RaclPolicySelVec[spi_host_reg_pkg::NumRegs] =
-      '{spi_host_reg_pkg::NumRegs{0}}
-  ) (
+module spi_host_reg_top (
   input clk_i,
   input rst_ni,
   input  tlul_pkg::tl_h2d_t tl_i,
@@ -24,11 +18,7 @@ module spi_host_reg_top

   // To HW
   output spi_host_reg_pkg::spi_host_reg2hw_t reg2hw, // Write
-  input  spi_host_reg_pkg::spi_host_hw2reg_t hw2reg, // Read
-
-  // RACL interface
-  input  top_racl_pkg::racl_policy_vec_t racl_policies_i,
-  output top_racl_pkg::racl_error_log_t  racl_error_o
+  input  spi_host_reg_pkg::spi_host_hw2reg_t hw2reg  // Read
 );

   import spi_host_reg_pkg::* ;
@@ -130,8 +120,7 @@ module spi_host_reg_top
     .be_o    (reg_be),
     .busy_i  (reg_busy),
     .rdata_i (reg_rdata),
-    // Translate RACL error to TLUL error if enabled
-    .error_i (reg_error | (RaclErrorRsp & racl_error_o.valid))
+    .error_i (reg_error)
   );

   // cdc oversampling signals
@@ -1684,32 +1673,12 @@ module spi_host_reg_top


   logic [11:0] addr_hit;
-  top_racl_pkg::racl_role_vec_t racl_role_vec;
-  top_racl_pkg::racl_role_t racl_role;

   logic [11:0] racl_addr_hit_read;
   logic [11:0] racl_addr_hit_write;

-  if (EnableRacl) begin : gen_racl_role_logic
-    // Retrieve RACL role from user bits and one-hot encode that for the comparison bitmap
-    assign racl_role = top_racl_pkg::tlul_extract_racl_role_bits(tl_i.a_user.rsvd);
-
-    prim_onehot_enc #(
-      .OneHotWidth( $bits(top_racl_pkg::racl_role_vec_t) )
-    ) u_racl_role_encode (
-      .in_i ( racl_role     ),
-      .en_i ( 1'b1          ),
-      .out_o( racl_role_vec )
-    );
-  end else begin : gen_no_racl_role_logic
-    assign racl_role     = '0;
-    assign racl_role_vec = '0;
-  end
-
   always_comb begin
     addr_hit = '0;
-    racl_addr_hit_read  = '0;
-    racl_addr_hit_write = '0;
     addr_hit[ 0] = (reg_addr == SPI_HOST_INTR_STATE_OFFSET);
     addr_hit[ 1] = (reg_addr == SPI_HOST_INTR_ENABLE_OFFSET);
     addr_hit[ 2] = (reg_addr == SPI_HOST_INTR_TEST_OFFSET);
@@ -1723,36 +1692,11 @@ module spi_host_reg_top
     addr_hit[10] = (reg_addr == SPI_HOST_ERROR_STATUS_OFFSET);
     addr_hit[11] = (reg_addr == SPI_HOST_EVENT_ENABLE_OFFSET);

-    if (EnableRacl) begin : gen_racl_hit
-      for (int unsigned slice_idx = 0; slice_idx < 12; slice_idx++) begin
-        racl_addr_hit_read[slice_idx] =
-            addr_hit[slice_idx] & (|(racl_policies_i[RaclPolicySelVec[slice_idx]].read_perm
-                                      & racl_role_vec));
-        racl_addr_hit_write[slice_idx] =
-            addr_hit[slice_idx] & (|(racl_policies_i[RaclPolicySelVec[slice_idx]].write_perm
-                                      & racl_role_vec));
-      end
-    end else begin : gen_no_racl
-      racl_addr_hit_read  = addr_hit;
-      racl_addr_hit_write = addr_hit;
-    end
+    racl_addr_hit_read  = addr_hit;
+    racl_addr_hit_write = addr_hit;
   end

   assign addrmiss = (reg_re || reg_we) ? ~|addr_hit : 1'b0 ;
-  // A valid address hit, access, but failed the RACL check
-  assign racl_error_o.valid = |addr_hit & ((reg_re & ~|racl_addr_hit_read) |
-                                           (reg_we & ~|racl_addr_hit_write));
-  assign racl_error_o.request_address = top_pkg::TL_AW'(reg_addr);
-  assign racl_error_o.racl_role       = racl_role;
-  assign racl_error_o.overflow        = 1'b0;
-
-  if (EnableRacl) begin : gen_racl_log
-    assign racl_error_o.ctn_uid     = top_racl_pkg::tlul_extract_ctn_uid_bits(tl_i.a_user.rsvd);
-    assign racl_error_o.read_access = tl_i.a_opcode == tlul_pkg::Get;
-  end else begin : gen_no_racl_log
-    assign racl_error_o.ctn_uid     = '0;
-    assign racl_error_o.read_access = 1'b0;
-  end

   // Check sub-word write is permitted
   always_comb begin
@@ -1980,8 +1924,6 @@ module spi_host_reg_top
   logic unused_be;
   assign unused_wdata = ^reg_wdata;
   assign unused_be = ^reg_be;
-  logic unused_policy_sel;
-  assign unused_policy_sel = ^racl_policies_i;

   // Assertions for Register Interface
   `ASSERT_PULSE(wePulse, reg_we, clk_i, !rst_ni)
diff --git a/rtl/spi_host_window.sv b/rtl/spi_host_window.sv
index 1ffd299..35a862c 100644
--- a/rtl/spi_host_window.sv
+++ b/rtl/spi_host_window.sv
@@ -5,13 +5,7 @@
 // Module to manage TX & RX FIFO windows for Serial Peripheral Interface (SPI) host IP.
 //

-module spi_host_window
-#(
-  parameter bit                             EnableRacl             = 1'b0,
-  parameter bit                             RaclErrorRsp           = 1'b1,
-  parameter top_racl_pkg::racl_policy_sel_t RaclPolicySelWinRXDATA = 0,
-  parameter top_racl_pkg::racl_policy_sel_t RaclPolicySelWinTXDATA = 0
-) (
+module spi_host_window (
   input  clk_i,
   input  rst_ni,
   input  tlul_pkg::tl_h2d_t rx_win_i,
@@ -22,23 +16,12 @@ module spi_host_window
   output logic [3:0]        tx_be_o,
   output logic              tx_valid_o,
   input        [31:0]       rx_data_i,
-  output logic              rx_ready_o,
-  // RACL interface
-  input  top_racl_pkg::racl_policy_vec_t racl_policies_i,
-  output top_racl_pkg::racl_error_log_t  racl_error_tx_o,
-  output top_racl_pkg::racl_error_log_t  racl_error_rx_o
+  output logic              rx_ready_o
 );

   localparam int AW = spi_host_reg_pkg::BlockAw;
   localparam int DW = 32;
   localparam int ByteMaskW = DW / 8;
-  localparam top_racl_pkg::racl_range_t RaclPolicySelRangesTXDATA[1] = '{
-    '{
-      base: {top_pkg::TL_AW{1'b0}},
-      mask: {top_pkg::TL_AW{1'b1}},
-      policy_sel: top_racl_pkg::racl_policy_sel_t'(RaclPolicySelWinTXDATA)
-    }
-  };

   logic         rx_we;

@@ -46,13 +29,10 @@ module spi_host_window
   logic  rx_access_error;
   assign rx_access_error = rx_we;

-  tlul_adapter_reg_racl #(
+  tlul_adapter_reg #(
     .RegAw             ( AW                       ),
     .RegDw             ( DW                       ),
-    .EnableDataIntgGen ( 0                        ),
-    .EnableRacl        ( EnableRacl               ),
-    .RaclErrorRsp      ( RaclErrorRsp             ),
-    .RaclPolicySelVec  ( RaclPolicySelWinRXDATA   )
+    .EnableDataIntgGen ( 0                        )
   ) u_adapter_rx (
     .clk_i,
     .rst_ni,
@@ -60,8 +40,6 @@ module spi_host_window
     .tl_o             ( rx_win_o                  ),
     .en_ifetch_i      ( prim_mubi_pkg::MuBi4False ),
     .intg_error_o     (                           ),
-    .racl_policies_i  ( racl_policies_i           ),
-    .racl_error_o     ( racl_error_rx_o           ),
     .we_o             ( rx_we                     ),
     .re_o             ( rx_ready_o                ),
     .addr_o           (                           ),
@@ -83,17 +61,13 @@ module spi_host_window
   end

   // Only support writes to the data TX fifo window
-  tlul_adapter_sram_racl #(
+  tlul_adapter_sram #(
     .SramAw(AW),
     .SramDw(DW),
     .Outstanding(1),
     .ByteAccess(1),
     .ErrOnWrite(0),
-    .ErrOnRead(1),
-    .EnableRacl(EnableRacl),
-    .RaclErrorRsp(RaclErrorRsp),
-    .RaclPolicySelNumRanges(1),
-    .RaclPolicySelRanges(RaclPolicySelRangesTXDATA)
+    .ErrOnRead(1)
   ) u_adapter_tx (
     .clk_i,
     .rst_ni,
@@ -109,7 +83,6 @@ module spi_host_window
     .wdata_cap_o(),
     .wmask_o(bit_mask),
     .intg_error_o(),
-    .user_rsvd_o(),
     .rdata_i('0),
     .rdata_cap_i(1'b0),
     .rvalid_i('0),
@@ -118,9 +91,7 @@ module spi_host_window
     .readback_en_i(prim_mubi_pkg::MuBi4False),
     .readback_error_o (),
     .wr_collision_i(1'b0),
-    .write_pending_i(1'b0),
-    .racl_policies_i  (racl_policies_i),
-    .racl_error_o     (racl_error_tx_o)
+    .write_pending_i(1'b0)
   );

 endmodule : spi_host_window
diff --git a/spi_host.core b/spi_host.core
index 8f28ff9..ca8ee0d 100644
--- a/spi_host.core
+++ b/spi_host.core
@@ -11,9 +11,7 @@ filesets:
       - lowrisc:constants:top_pkg
       - lowrisc:prim:all
       - lowrisc:prim:flop_en
-      - lowrisc:prim:racl_error_arb
       - lowrisc:ip:tlul
-      - lowrisc:systems:top_racl_pkg
     files:
       - rtl/spi_host_reg_pkg.sv
       - rtl/spi_host_cmd_pkg.sv
